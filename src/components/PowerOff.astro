---
---

<button id="power-off" class="power-off-button">
    <svg class="power-icon" viewBox="0 0 24 24" width="24" height="24">
        <path fill="currentColor" d="M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13" />
    </svg>
</button>

<div id="black-overlay" class="black-overlay"></div>
<div id="goodbye-message" class="goodbye-message">Stepping out of the screen</div>

<style>
@import url('https://fonts.googleapis.com/css2?family=Share+Tech&display=swap');
   .power-off-button {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #333;
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    cursor: pointer;
    outline: none;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s;
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}

.power-off-button:hover {
    background-color: #555;
}

.power-icon {
    width: 30px;
    height: 30px;
    color: white;
}
.black-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: black;
    opacity: 0;
    visibility: hidden; /* Add this to hide the element completely */
    pointer-events: none; /* Ensure it's not interactive */
    z-index: 9999;
    transition: opacity 0.05s, visibility 0s 0.05s; /* Delay visibility toggle until opacity transition ends */
}

.goodbye-message {
    font-family: "Share Tech", sans-serif;
    font-weight: 400;
    font-style: normal;
    text-align:center;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 5rem;
    font-weight: bold;
    color: white;
    opacity: 0;
    visibility: hidden; /* Add this to hide the message */
    z-index: 10000;
    transition: opacity 0.5s, visibility 0s 0.5s; /* Ensure visibility syncs with opacity */
    width: 80%;
}

</style>

<script define:vars="">
    document.addEventListener('DOMContentLoaded', () => {
        const powerOffButton = document.getElementById('power-off');
        const blackOverlay = document.getElementById('black-overlay');
        const goodbyeMessage = document.getElementById('goodbye-message');

        powerOffButton.addEventListener('click', handlePowerOff);

        function handlePowerOff() {
            powerOffButton.disabled = true;
            blackOverlay.style.visibility = 'visible'; // Show the overlay

            let flashCount = 0;
            const flashInterval = setInterval(() => {
                blackOverlay.style.opacity = flashCount % 2 === 0 ? '1' : '0';
                flashCount++;

                if (flashCount >= 10) { // 5 on-off cycles (faster)
                    clearInterval(flashInterval);
                    blackOverlay.style.opacity = '1';
                    showGoodbyeMessage();
                }
            }, 100); // Flash every 100ms
        }

        function showGoodbyeMessage() {
            goodbyeMessage.style.visibility = 'visible'; // Show the goodbye message
            goodbyeMessage.style.opacity = '1';

            // Wait for 1 second, then redirect
            setTimeout(() => {
                window.location.href = '/';
            }, 1000);
        }
    });
</script>
